
	1. HTTP协议消息的格式:
		1. 请求(request)
			请求方法 路径 HTTP/1.1\r\n
			k1:v1\r\n
			...\r\n
			\r\n
			请求体        <-- 可以有,可以没有

		2. 响应(response)
			HTTP/1.1 状态码 状态描述符\r\n
			k1:v1\r\n
			Content-Type: text/html; charset=utf8\r\n
			\r\n
			响应正文       <-- HTML内容

	2. Python web框架的本质:
		a. 收发socket消息    --> 按照HTTP协议消息格式去解析消息

		b. 路径和要执行的函数的对应关系   --> 主要的业务逻辑

		c. 字符串替换                     --> 模板(特殊符号 --> 数据)

	3. 一个完整得请求流程:
		0. 启动服务端,等待客户端(用户的浏览器)来连接
		1. 在浏览器地址栏输入URL,与服务端建立连接,浏览器发送请求
		2. 服务端收到请求消息,解析请求消息,根据路径和函数的对应关系,找到将要执行的函数
		3. 执行函数,打开HTML文件,进行字符串替换,得到一个最终要返回的HTML内容
		4. 按照HTTP协议的消息格式要求,把HTML内容回复给用户浏览器(发送响应)
		5. 浏览器收到响应的消息之后,按照HTML的规则渲染页面.
		6. 关闭连接